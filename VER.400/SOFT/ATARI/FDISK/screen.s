;
; File generated by cc65 v 2.8.0
;
	.fopt		compiler,"cc65 v 2.8.0"
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank, tmp1, ptr1, ptr2
	.macpack	longbranch
	.dbg		file, "screen.c", 9721, 1279048568
	.dbg		file, "C:\Work\CMPLRS\cc65\include/stdio.h", 5323, 1018643664
	.dbg		file, "C:\Work\CMPLRS\cc65\include/stddef.h", 2865, 1018643664
	.dbg		file, "C:\Work\CMPLRS\cc65\include/stdarg.h", 3007, 1018643664
	.dbg		file, "C:\Work\CMPLRS\cc65\include/string.h", 4335, 1018643664
	.dbg		file, "C:\Work\CMPLRS\cc65\include/conio.h", 7309, 1018643664
	.dbg		file, "C:\Work\CMPLRS\cc65\include/atari.h", 9513, 1030607464
	.dbg		file, "C:\Work\CMPLRS\cc65\include/_gtia.h", 5733, 1018643664
	.dbg		file, "C:\Work\CMPLRS\cc65\include/_pbi.h", 3057, 1018643664
	.dbg		file, "C:\Work\CMPLRS\cc65\include/_pokey.h", 4268, 1018643664
	.dbg		file, "C:\Work\CMPLRS\cc65\include/_pia.h", 2655, 1018643664
	.dbg		file, "C:\Work\CMPLRS\cc65\include/_antic.h", 3412, 1018643664
	.dbg		file, "plat.h", 1225, 1279048568
	.dbg		file, "type.h", 1140, 1279048570
	.dbg		file, "C:\Work\Projects\SIO2IDE\\VER.400\SOFT\AVR\FAT_1632/cfg.h", 800, 1279048570
	.dbg		file, "C:\Work\Projects\SIO2IDE\\VER.400\SOFT\AVR\FAT_1632/ptable.h", 2129, 1279048570
	.dbg		file, "C:\Work\Projects\SIO2IDE\\VER.400\SOFT\AVR\FAT_1632/direntry.h", 4014, 1279048570
	.dbg		file, "C:\Work\Projects\SIO2IDE\\VER.400\SOFT\AVR\FAT_1632/iso.h", 8718, 1279048570
	.dbg		file, "C:\Work\Projects\SIO2IDE\\VER.400\SOFT\AVR\FAT_1632/idestruc.h", 1307, 1279048570
	.dbg		file, "C:\Work\Projects\SIO2IDE\\VER.400\SOFT\AVR\FAT_1632/fatstruc.h", 3099, 1279048570
	.dbg		file, "C:\Work\Projects\SIO2IDE\\VER.400\SOFT\AVR\FAT_1632/siocmds.h", 2388, 1279048570
	.dbg		file, "keys.h", 865, 1279048568
	.dbg		file, "siosrv.h", 1744, 1279048568
	.dbg		file, "screen.h", 1856, 1279048568
	.dbg		file, "menu.h", 1328, 1279048568
	.dbg		file, "listv.h", 1458, 1279048568
	.dbg		file, "qsort.h", 847, 1279048568
	.import		_sprintf
	.import		_strchr
	.import		_strlen
	.import		_memset
	.import		_clrscr
	.import		_kbhit
	.import		_gotoxy
	.import		_wherex
	.import		_wherey
	.import		_cputc
	.import		_cputcxy
	.import		_cgetc
	.import		_cursor
	.export		_SCR_Init
	.export		_SCR_DeInit
	.export		_SCR_DrawFrame
	.export		_SCR_DrawWindow
	.export		_SCR_ProgressShow
	.export		_SCR_ProgressUpdate
	.export		_SCR_LoadShow
	.export		_SCR_LoadUpdate
	.export		_SCR_LineCenter
	.export		_SCR_LineCenterClr
	.export		_SCR_DrawLine
	.export		_WaitKey
	.export		_WaitKeyFor
	.export		_ShowCnfButton
	.export		_ShowYesNoButtons
	.import		_MENU_Show
	.import		_MENU_Delay

.segment	"RODATA"

L0001:
	.byte	$20,$50,$72,$65,$73,$73,$20,$27,$52,$65,$74,$75,$72,$6E,$27,$00
	.byte	$00,$00,$00,$00,$00,$20,$27,$59,$27,$65,$73,$00,$59,$79,$00,$20
	.byte	$27,$4E,$27,$6F,$20,$00,$1B,$4E,$6E,$00,$00,$00,$00,$00,$30,$25
	.byte	$00,$25,$64,$25,$25,$00,$4C,$6F,$61,$64,$65,$64,$3A,$20,$30,$00
	.byte	$4C,$6F,$61,$64,$65,$64,$3A,$20,$25,$75,$00

; ---------------------------------------------------------------
; void SCR_Init (void)
; ---------------------------------------------------------------

.segment	"CODE0"

.proc	_SCR_Init

	.dbg	line, "screen.c", 167
	lda     #$00
	jsr     _cursor
	.dbg	line, "screen.c", 168
	jmp     _clrscr
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void SCR_DeInit (void)
; ---------------------------------------------------------------

.segment	"CODE0"

.proc	_SCR_DeInit

	.dbg	line, "screen.c", 179
	jmp     _clrscr
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void SCR_DrawFrame (unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE0"

.proc	_SCR_DrawFrame

	.dbg	line, "screen.c", 192
	jsr     decsp2
	ldy     #$02
	lda     (sp),y
	beq     L0162
	.dbg	line, "screen.c", 194
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     incax1
	ldy     #$01
	sta     (sp),y
L0161:	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldy     #$06
	lda     (sp),y
	jsr     tosicmp
	bcs     L0162
	.dbg	line, "screen.c", 196
	ldy     #$05
	ldx     #$00
	lda     (sp),y
	jsr     incax1
	ldy     #$00
	sta     (sp),y
L0169:	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldy     #$05
	lda     (sp),y
	jsr     tosicmp
	bcs     L0163
	.dbg	line, "screen.c", 198
	ldy     #$01
	lda     (sp),y
	jsr     pusha
	ldy     #$01
	lda     (sp),y
	jsr     pusha
	lda     #$20
	jsr     _cputcxy
	.dbg	line, "screen.c", 196
	ldy     #$00
	lda     (sp),y
	pha
	clc
	adc     #$01
	sta     (sp),y
	pla
	jmp     L0169
	.dbg	line, "screen.c", 194
L0163:	ldy     #$01
	lda     (sp),y
	pha
	clc
	adc     #$01
	sta     (sp),y
	pla
	jmp     L0161
	.dbg	line, "screen.c", 202
L0162:	ldy     #$06
	lda     (sp),y
	jsr     pusha
	ldy     #$06
	lda     (sp),y
	jsr     pusha
	lda     #$11
	jsr     _cputcxy
	.dbg	line, "screen.c", 203
	ldy     #$06
	lda     (sp),y
	jsr     pusha
	ldy     #$04
	lda     (sp),y
	jsr     pusha
	lda     #$1A
	jsr     _cputcxy
	.dbg	line, "screen.c", 204
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     incax1
	ldy     #$01
	sta     (sp),y
L017D:	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldy     #$06
	lda     (sp),y
	jsr     tosicmp
	bcs     L017E
	.dbg	line, "screen.c", 206
	ldy     #$01
	lda     (sp),y
	jsr     pusha
	ldy     #$06
	lda     (sp),y
	jsr     pusha
	lda     #$12
	jsr     _cputcxy
	.dbg	line, "screen.c", 207
	ldy     #$01
	lda     (sp),y
	jsr     pusha
	ldy     #$04
	lda     (sp),y
	jsr     pusha
	lda     #$12
	jsr     _cputcxy
	.dbg	line, "screen.c", 204
	ldy     #$01
	lda     (sp),y
	pha
	clc
	adc     #$01
	sta     (sp),y
	pla
	jmp     L017D
	.dbg	line, "screen.c", 209
L017E:	ldy     #$04
	lda     (sp),y
	jsr     pusha
	ldy     #$06
	lda     (sp),y
	jsr     pusha
	lda     #$05
	jsr     _cputcxy
	.dbg	line, "screen.c", 210
	ldy     #$04
	lda     (sp),y
	jsr     pusha
	ldy     #$04
	lda     (sp),y
	jsr     pusha
	lda     #$03
	jsr     _cputcxy
	.dbg	line, "screen.c", 211
	ldy     #$05
	ldx     #$00
	lda     (sp),y
	jsr     incax1
	ldy     #$01
	sta     (sp),y
L0195:	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldy     #$05
	lda     (sp),y
	jsr     tosicmp
	jcs     incsp7
	.dbg	line, "screen.c", 213
	ldy     #$06
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	lda     #$7C
	jsr     _cputcxy
	.dbg	line, "screen.c", 214
	ldy     #$04
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	lda     #$7C
	jsr     _cputcxy
	.dbg	line, "screen.c", 211
	ldy     #$01
	lda     (sp),y
	pha
	clc
	adc     #$01
	sta     (sp),y
	pla
	jmp     L0195
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void SCR_DrawWindow (unsigned char*, unsigned char, unsigned char, unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE0"

.proc	_SCR_DrawWindow

	.dbg	line, "screen.c", 300
	ldy     #$2A
	jsr     subysp
	lda     #$02
	jsr     leaasp
	jsr     pushax
	ldx     #$00
	lda     #$12
	jsr     pushax
	lda     #$28
	jsr     _memset
	.dbg	line, "screen.c", 301
	ldy     #$2D
	ldx     #$00
	lda     (sp),y
	jsr     incax1
	ldy     #$01
	sta     (sp),y
L01FB:	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldy     #$2D
	lda     (sp),y
	jsr     tosicmp
	bcs     L01FC
	.dbg	line, "screen.c", 303
	ldy     #$2C
	ldx     #$00
	lda     (sp),y
	jsr     incax1
	ldy     #$00
	sta     (sp),y
L0203:	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldy     #$2C
	lda     (sp),y
	jsr     tosicmp
	bcs     L01FD
	.dbg	line, "screen.c", 305
	ldy     #$01
	lda     (sp),y
	jsr     pusha
	ldy     #$01
	lda     (sp),y
	jsr     pusha
	lda     #$20
	jsr     _cputcxy
	.dbg	line, "screen.c", 303
	ldy     #$00
	lda     (sp),y
	pha
	clc
	adc     #$01
	sta     (sp),y
	pla
	jmp     L0203
	.dbg	line, "screen.c", 301
L01FD:	ldy     #$01
	lda     (sp),y
	pha
	clc
	adc     #$01
	sta     (sp),y
	pla
	jmp     L01FB
	.dbg	line, "screen.c", 308
L01FC:	ldy     #$2D
	lda     (sp),y
	jsr     pusha
	ldy     #$2D
	lda     (sp),y
	jsr     pusha
	lda     #$11
	jsr     _cputcxy
	.dbg	line, "screen.c", 309
	ldy     #$2D
	lda     (sp),y
	jsr     pusha
	ldy     #$2B
	lda     (sp),y
	jsr     pusha
	lda     #$1A
	jsr     _cputcxy
	.dbg	line, "screen.c", 310
	ldy     #$2D
	ldx     #$00
	lda     (sp),y
	jsr     incax1
	ldy     #$01
	sta     (sp),y
L0217:	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldy     #$2D
	lda     (sp),y
	jsr     tosicmp
	bcs     L0218
	.dbg	line, "screen.c", 312
	ldy     #$01
	lda     (sp),y
	jsr     pusha
	ldy     #$2B
	lda     (sp),y
	jsr     pusha
	lda     #$12
	jsr     _cputcxy
	.dbg	line, "screen.c", 310
	ldy     #$01
	lda     (sp),y
	pha
	clc
	adc     #$01
	sta     (sp),y
	pla
	jmp     L0217
	.dbg	line, "screen.c", 314
L0218:	ldy     #$2B
	lda     (sp),y
	jsr     pusha
	ldy     #$2D
	lda     (sp),y
	jsr     pusha
	lda     #$05
	jsr     _cputcxy
	.dbg	line, "screen.c", 315
	ldy     #$2B
	lda     (sp),y
	jsr     pusha
	ldy     #$2B
	lda     (sp),y
	jsr     pusha
	lda     #$03
	jsr     _cputcxy
	.dbg	line, "screen.c", 316
	ldy     #$2C
	ldx     #$00
	lda     (sp),y
	jsr     incax1
	ldy     #$01
	sta     (sp),y
L022B:	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldy     #$2C
	lda     (sp),y
	jsr     tosicmp
	bcs     L022C
	.dbg	line, "screen.c", 318
	ldy     #$2D
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	lda     #$7C
	jsr     _cputcxy
	.dbg	line, "screen.c", 319
	ldy     #$2B
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	lda     #$7C
	jsr     _cputcxy
	.dbg	line, "screen.c", 316
	ldy     #$01
	lda     (sp),y
	pha
	clc
	adc     #$01
	sta     (sp),y
	pla
	jmp     L022B
	.dbg	line, "screen.c", 322
L022C:	ldy     #$2D
	ldx     #$00
	lda     (sp),y
	jsr     incax1
	jsr     pusha
	ldy     #$2D
	lda     (sp),y
	jsr     pusha
	lda     #$04
	jsr     _cputcxy
	.dbg	line, "screen.c", 323
	ldy     #$2D
	ldx     #$00
	lda     (sp),y
	jsr     incax2
	jsr     pusha
	ldy     #$2D
	lda     (sp),y
	jsr     pusha
	lda     #$14
	jsr     _cputcxy
	.dbg	line, "screen.c", 324
	ldy     #$2D
	ldx     #$00
	lda     (sp),y
	jsr     incax3
	jsr     pusha
	ldy     #$2D
	lda     (sp),y
	jsr     pusha
	lda     #$01
	jsr     _cputcxy
	.dbg	line, "screen.c", 326
	lda     #$02
	jsr     leaasp
	jsr     pushax
	ldy     #$33
	jsr     pushwysp
	ldy     #$2F
	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldy     #$33
	lda     (sp),y
	jsr     tossubax
	jsr     decax4
	jsr     pusha
	jsr     _SCR_LineCenterBuf
	.dbg	line, "screen.c", 327
	ldy     #$2D
	ldx     #$00
	lda     (sp),y
	jsr     incax4
	jsr     pusha
	ldy     #$2D
	lda     (sp),y
	jsr     _gotoxy
	.dbg	line, "screen.c", 328
	lda     #$02
	jsr     leaasp
	jsr     pushax
	ldy     #$2D
	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldy     #$31
	lda     (sp),y
	jsr     tossubax
	jsr     decax4
	jsr     pusha
	jsr     _SCR_DrawLine
	.dbg	line, "screen.c", 329
	ldy     #$30
	jmp     addysp
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void SCR_ProgressShow (struct $anon-struct-0019*, unsigned char, unsigned char, unsigned char, unsigned int)
; ---------------------------------------------------------------

.segment	"CODE0"

.proc	_SCR_ProgressShow

	.dbg	line, "screen.c", 339
	ldy     #$06
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$04
	lda     (sp),y
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "screen.c", 340
	ldy     #$06
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$03
	lda     (sp),y
	ldy     #$01
	sta     (ptr1),y
	.dbg	line, "screen.c", 341
	ldy     #$06
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (sp),y
	sta     (ptr1),y
	.dbg	line, "screen.c", 342
	ldy     #$08
	jsr     pushwysp
	ldy     #$03
	jsr     ldaxysp
	ldy     #$03
	jsr     staxspidx
	.dbg	line, "screen.c", 344
	ldy     #$04
	lda     (sp),y
	jsr     pusha
	ldy     #$04
	lda     (sp),y
	jsr     pusha
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$04
	clc
	adc     (sp),y
	bcc     L02B3
	inx
L02B3:	jsr     incax1
	jsr     pusha
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     incax2
	jsr     pusha
	lda     #$01
	jsr     pusha
	jsr     _SCR_DrawFrame
	.dbg	line, "screen.c", 345
	ldy     #$04
	clc
	lda     #$01
	adc     (sp),y
	sta     (sp),y
	jsr     pusha
	ldy     #$04
	ldx     #$00
	lda     (sp),y
	jsr     incax1
	jsr     pusha
	lda     #$01
L02B4:	jsr     _cputcxy
	.dbg	line, "screen.c", 346
	ldy     #$02
	sec
	lda     (sp),y
	sbc     #$01
	sta     (sp),y
	tax
	beq     L0267
	.dbg	line, "screen.c", 348
	ldy     #$04
	clc
	lda     #$01
	adc     (sp),y
	sta     (sp),y
	jsr     pusha
	ldy     #$04
	ldx     #$00
	lda     (sp),y
	jsr     incax1
	jsr     pusha
	lda     #$12
	.dbg	line, "screen.c", 349
	jmp     L02B4
	.dbg	line, "screen.c", 350
L0267:	ldy     #$06
	jsr     ldaxysp
	ldy     #$00
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1),y
	jsr     incax1
	jsr     pusha
	ldy     #$07
	jsr     ldaxysp
	ldy     #$01
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jsr     _gotoxy
	.dbg	line, "screen.c", 351
	lda     #<(L0001+46)
	ldx     #>(L0001+46)
	jsr     pushax
	ldy     #$08
	jsr     ldaxysp
	ldy     #$02
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jsr     pusha
	jsr     _SCR_LineCenter
	.dbg	line, "screen.c", 352
	jmp     incsp7
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void SCR_ProgressUpdate (struct $anon-struct-0019*, unsigned int)
; ---------------------------------------------------------------

.segment	"CODE0"

.proc	_SCR_ProgressUpdate

	.dbg	line, "screen.c", 365
	ldy     #$2C
	jsr     subysp
	ldy     #$2F
	jsr     pushwysp
	ldy     #$31
	jsr     ldaxysp
	ldy     #$04
	jsr     ldaxidx
	jsr     tosicmp
	bcc     L0275
	beq     L0275
	.dbg	line, "screen.c", 367
	ldy     #$2F
	jsr     ldaxysp
	ldy     #$04
	jsr     ldaxidx
	ldy     #$2C
	jsr     staxysp
	.dbg	line, "screen.c", 369
L0275:	ldy     #$2F
	jsr     ldaxysp
	ldy     #$02
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1),y
	jsr     pushax
	ldy     #$2F
	jsr     ldaxysp
	jsr     tosumulax
	jsr     pushax
	ldy     #$31
	jsr     ldaxysp
	ldy     #$04
	jsr     ldaxidx
	jsr     tosudivax
	ldy     #$02
	jsr     staxysp
	.dbg	line, "screen.c", 370
	ldy     #$2F
	jsr     ldaxysp
	ldy     #$00
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1),y
	jsr     incax1
	ldy     #$00
	jsr     staxysp
	.dbg	line, "screen.c", 371
L027E:	ldy     #$03
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     decax1
	ldy     #$02
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	stx     tmp1
	ora     tmp1
	beq     L027F
	.dbg	line, "screen.c", 373
	ldy     #$01
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$00
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jsr     pusha
	ldy     #$30
	jsr     ldaxysp
	ldy     #$01
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1),y
	jsr     incax1
	jsr     pusha
	lda     #$A0
	jsr     _cputcxy
	.dbg	line, "screen.c", 374
	jmp     L027E
	.dbg	line, "screen.c", 375
L027F:	ldy     #$2F
	jsr     ldaxysp
	ldy     #$00
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1),y
	jsr     incax1
	jsr     pusha
	ldy     #$30
	jsr     ldaxysp
	ldy     #$01
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jsr     _gotoxy
	.dbg	line, "screen.c", 376
	ldy     #$2D
	jsr     ldaxysp
	jsr     pushax
	lda     #$64
	jsr     tosumula0
	jsr     pushax
	ldy     #$31
	jsr     ldaxysp
	ldy     #$04
	jsr     ldaxidx
	jsr     tosudivax
	ldy     #$02
	jsr     staxysp
	.dbg	line, "screen.c", 377
	lda     #$04
	jsr     leaasp
	jsr     pushax
	lda     #<(L0001+49)
	ldx     #>(L0001+49)
	jsr     pushax
	ldy     #$09
	jsr     pushwysp
	ldy     #$06
	jsr     _sprintf
	.dbg	line, "screen.c", 378
	lda     #$04
	jsr     leaasp
	jsr     pushax
	ldy     #$31
	jsr     ldaxysp
	ldy     #$02
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jsr     pusha
	jsr     _SCR_LineCenter
	.dbg	line, "screen.c", 379
	ldy     #$30
	jmp     addysp
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void SCR_LoadShow (struct $anon-struct-0019*, unsigned char, unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE0"

.proc	_SCR_LoadShow

	.dbg	line, "screen.c", 389
	ldy     #$04
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (sp),y
	ldy     #$00
	sta     (ptr1),y
	.dbg	line, "screen.c", 390
	ldy     #$04
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (sp),y
	sta     (ptr1),y
	.dbg	line, "screen.c", 391
	ldy     #$04
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (sp),y
	ldy     #$02
	sta     (ptr1),y
	.dbg	line, "screen.c", 392
	ldy     #$04
	jsr     ldaxysp
	sta     sreg
	stx     sreg+1
	lda     #$00
	ldy     #$03
	sta     (sreg),y
	iny
	sta     (sreg),y
	.dbg	line, "screen.c", 394
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$04
	ldx     #$00
	lda     (sp),y
	ldy     #$02
	clc
	adc     (sp),y
	bcc     L02B5
	inx
L02B5:	jsr     incax1
	jsr     pusha
	ldy     #$04
	ldx     #$00
	lda     (sp),y
	jsr     incax2
	jsr     pusha
	lda     #$01
	jsr     pusha
	jsr     _SCR_DrawFrame
	.dbg	line, "screen.c", 395
	ldy     #$04
	jsr     ldaxysp
	ldy     #$00
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1),y
	jsr     incax1
	jsr     pusha
	ldy     #$05
	jsr     ldaxysp
	ldy     #$01
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1),y
	jsr     incax1
	jsr     _gotoxy
	.dbg	line, "screen.c", 396
	lda     #<(L0001+54)
	ldx     #>(L0001+54)
	jsr     pushax
	ldy     #$06
	jsr     ldaxysp
	ldy     #$02
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jsr     pusha
	jsr     _SCR_LineCenter
	.dbg	line, "screen.c", 397
	jmp     incsp5
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void SCR_LoadUpdate (struct $anon-struct-0019*, unsigned int)
; ---------------------------------------------------------------

.segment	"CODE0"

.proc	_SCR_LoadUpdate

	.dbg	line, "screen.c", 409
	ldy     #$28
	jsr     subysp
	ldy     #$2B
	jsr     ldaxysp
	ldy     #$00
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1),y
	jsr     incax1
	jsr     pusha
	ldy     #$2C
	jsr     ldaxysp
	ldy     #$01
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1),y
	jsr     incax1
	jsr     _gotoxy
	.dbg	line, "screen.c", 410
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #<(L0001+64)
	ldx     #>(L0001+64)
	jsr     pushax
	ldy     #$2F
	jsr     pushwysp
	ldy     #$06
	jsr     _sprintf
	.dbg	line, "screen.c", 411
	lda     sp
	ldx     sp+1
	jsr     pushax
	ldy     #$2D
	jsr     ldaxysp
	ldy     #$02
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jsr     pusha
	jsr     _SCR_LineCenter
	.dbg	line, "screen.c", 412
	ldy     #$2C
	jmp     addysp
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void SCR_LineCenter (unsigned char*, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE0"

.proc	_SCR_LineCenter

	.dbg	line, "screen.c", 228
	jsr     decsp1
	ldy     #$03
	jsr     ldaxysp
	jsr     _strlen
	jsr     pushax
	ldy     #$03
	ldx     #$00
	lda     (sp),y
	jsr     tosicmp
	bcc     L01A9
	beq     L01A9
	lda     #$00
	jmp     L01AB
L01A9:	ldy     #$01
	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     _strlen
	jsr     tossubax
	lsr     a
L01AB:	ldy     #$00
	sta     (sp),y
	.dbg	line, "screen.c", 229
	jsr     _wherex
	ldy     #$00
	clc
	adc     (sp),y
	jsr     pusha
	jsr     _wherey
	jsr     _gotoxy
	.dbg	line, "screen.c", 230
L01B3:	ldy     #$03
	jsr     ldaxysp
	ldy     #$00
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jeq     incsp4
	iny
	lda     (sp),y
	pha
	sec
	sbc     #$01
	sta     (sp),y
	pla
	tax
	jeq     incsp4
	.dbg	line, "screen.c", 232
	ldy     #$03
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$02
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	ldy     #$00
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jsr     _cputc
	.dbg	line, "screen.c", 233
	jmp     L01B3
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void SCR_LineCenterClr (unsigned char*, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE0"

.proc	_SCR_LineCenterClr

	.dbg	line, "screen.c", 247
	ldy     #$2B
	jsr     subysp
	jsr     _wherex
	ldy     #$01
	sta     (sp),y
	.dbg	line, "screen.c", 248
	jsr     _wherey
	ldy     #$00
	sta     (sp),y
	.dbg	line, "screen.c", 249
	lda     #$03
	jsr     leaasp
	jsr     pushax
	ldx     #$00
	lda     #$20
	jsr     pushax
	lda     #$28
	jsr     _memset
	.dbg	line, "screen.c", 250
	lda     #$03
	jsr     leaasp
	jsr     pushax
	ldy     #$2D
	lda     (sp),y
	jsr     pusha
	jsr     _SCR_DrawLine
	.dbg	line, "screen.c", 252
	ldy     #$2D
	jsr     ldaxysp
	jsr     _strlen
	jsr     pushax
	ldy     #$2D
	ldx     #$00
	lda     (sp),y
	jsr     tosicmp
	bcc     L01CA
	beq     L01CA
	lda     #$00
	jmp     L01CC
L01CA:	ldy     #$2B
	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldy     #$2F
	jsr     ldaxysp
	jsr     _strlen
	jsr     tossubax
	lsr     a
L01CC:	ldy     #$02
	sta     (sp),y
	.dbg	line, "screen.c", 253
	dey
	lda     (sp),y
	iny
	clc
	adc     (sp),y
	bcc     L02B7
	ldx     #$01
L02B7:	jsr     pusha
	ldy     #$01
	lda     (sp),y
	jsr     _gotoxy
	.dbg	line, "screen.c", 254
L01D4:	ldy     #$2D
	jsr     ldaxysp
	ldy     #$00
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	beq     L01D5
	ldy     #$2B
	lda     (sp),y
	pha
	sec
	sbc     #$01
	sta     (sp),y
	pla
	tax
	beq     L01D5
	.dbg	line, "screen.c", 256
	ldy     #$2D
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$2C
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	ldy     #$00
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jsr     _cputc
	.dbg	line, "screen.c", 257
	jmp     L01D4
	.dbg	line, "screen.c", 258
L01D5:	ldy     #$2E
	jmp     addysp
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void SCR_DrawLine (unsigned char*, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE0"

.proc	_SCR_DrawLine

	.dbg	line, "screen.c", 283
L01EE:	ldy     #$02
	jsr     ldaxysp
	ldy     #$00
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jeq     incsp3
	lda     (sp),y
	pha
	sec
	sbc     #$01
	sta     (sp),y
	pla
	tax
	jeq     incsp3
	.dbg	line, "screen.c", 285
	ldy     #$02
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$01
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	ldy     #$00
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jsr     _cputc
	.dbg	line, "screen.c", 286
	jmp     L01EE
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void WaitKey (unsigned char*)
; ---------------------------------------------------------------

.segment	"CODE0"

.proc	_WaitKey

	.dbg	line, "screen.c", 41
	jsr     decsp1
	.dbg	line, "screen.c", 43
L00D7:	lda     #$FF
	ldy     #$00
	sta     (sp),y
	.dbg	line, "screen.c", 44
	jsr     _kbhit
	tax
	beq     L00D7
	.dbg	line, "screen.c", 46
	jsr     _cgetc
	ldy     #$00
	sta     (sp),y
	.dbg	line, "screen.c", 47
	ldy     #$04
	jsr     pushwysp
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     _strchr
	stx     tmp1
	ora     tmp1
	beq     L00D7
	jmp     incsp3
	.dbg	line

.endproc

; ---------------------------------------------------------------
; unsigned char WaitKeyFor (unsigned char*, unsigned char*, unsigned char*, unsigned char*, unsigned int)
; ---------------------------------------------------------------

.segment	"CODE0"

.proc	_WaitKeyFor

	.dbg	line, "screen.c", 64
	jsr     decsp8
	ldy     #$13
	jsr     pushwysp
	lda     #$06
	jsr     pusha
	lda     #$07
	jsr     pusha
	lda     #$21
	jsr     pusha
	lda     #$10
	jsr     pusha
	jsr     _SCR_DrawWindow
	.dbg	line, "screen.c", 66
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$09
	jsr     pusha
	lda     #$09
	jsr     pusha
	lda     #$14
	jsr     pusha
	ldy     #$0E
	jsr     ldaxysp
	jsr     mulax10
	jsr     pushax
	jsr     _SCR_ProgressShow
	.dbg	line, "screen.c", 68
	lda     #$06
	jsr     pusha
	lda     #$0D
	jsr     _gotoxy
	.dbg	line, "screen.c", 69
	ldy     #$11
	jsr     pushwysp
	lda     #$1C
	jsr     pusha
	jsr     _SCR_LineCenter
	.dbg	line, "screen.c", 70
	lda     #$06
	jsr     pusha
	lda     #$0E
	jsr     _gotoxy
	.dbg	line, "screen.c", 71
	ldy     #$0F
	jsr     pushwysp
	lda     #$1C
	jsr     pusha
	jsr     _SCR_LineCenter
	.dbg	line, "screen.c", 73
	ldx     #$00
	txa
L02B9:	ldy     #$05
	jsr     staxysp
	ldy     #$08
	jsr     pushwysp
	ldy     #$0B
	jsr     ldaxysp
	jsr     mulax10
	jsr     tosicmp
	bcs     L00FD
	.dbg	line, "screen.c", 75
	lda     #$FF
	ldy     #$07
	sta     (sp),y
	.dbg	line, "screen.c", 76
	jsr     _kbhit
	tax
	beq     L010B
	.dbg	line, "screen.c", 78
	jsr     _cgetc
	ldy     #$07
	sta     (sp),y
	.dbg	line, "screen.c", 79
	ldy     #$0D
	jsr     pushwysp
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	jsr     _strchr
	stx     tmp1
	ora     tmp1
	beq     L010B
	ldy     #$07
	ldx     #$00
	lda     (sp),y
	jmp     L00E2
	.dbg	line, "screen.c", 81
L010B:	lda     sp
	ldx     sp+1
	jsr     pushax
	ldy     #$0A
	jsr     pushwysp
	jsr     _SCR_ProgressUpdate
	.dbg	line, "screen.c", 82
	ldx     #$01
	lda     #$00
	sta     sreg
	sta     sreg+1
	lda     #$5E
	jsr     pusheax
	jsr     _MENU_Delay
	.dbg	line, "screen.c", 73
	ldy     #$06
	jsr     ldaxysp
	jsr     incax1
	jmp     L02B9
	.dbg	line, "screen.c", 84
L00FD:	ldx     #$00
	txa
	.dbg	line, "screen.c", 85
L00E2:	ldy     #$12
	jmp     addysp
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void ShowCnfButton (unsigned char*, unsigned char)
; ---------------------------------------------------------------

.segment	"DATA"

L0117:
	.byte	$02
	.addr	L0001
	.addr	L0001+16
	.word	$0000
	.byte	$00
	.addr	L0001+17
	.addr	L0001+18
	.word	$0000
L0120:
	.byte	$01
	.addr	L0001+19
	.byte	$0A
	.byte	$0C
	.byte	$1C
	.byte	$0E
	.addr	L0117
	.addr	L0001+20
	.word	$0000

.segment	"CODE0"

.proc	_ShowCnfButton

	.dbg	line, "screen.c", 128
	ldy     #$02
	jsr     ldaxysp
	sta     L0120+1
	stx     L0120+1+1
	.dbg	line, "screen.c", 129
	ldy     #$00
	lda     (sp),y
	sta     L0120+4
	.dbg	line, "screen.c", 130
	ldx     #$00
	lda     (sp),y
	jsr     incax2
	sta     L0120+6
	.dbg	line, "screen.c", 131
	lda     #<(L0120)
	ldx     #>(L0120)
	jsr     pushax
	jsr     _MENU_Show
	.dbg	line, "screen.c", 132
	jmp     incsp3
	.dbg	line

.endproc

; ---------------------------------------------------------------
; unsigned char ShowYesNoButtons (unsigned char*, unsigned char)
; ---------------------------------------------------------------

.segment	"DATA"

L0133:
	.byte	$02
	.addr	L0001+21
	.addr	L0001+28
	.word	$0000
	.byte	$02
	.addr	L0001+31
	.addr	L0001+38
	.word	$0000
	.byte	$00
	.addr	L0001+42
	.addr	L0001+43
	.word	$0000
L0140:
	.byte	$02
	.addr	L0001+44
	.byte	$09
	.byte	$0C
	.byte	$1D
	.byte	$0E
	.addr	L0133
	.addr	L0001+45
	.word	$0000

.segment	"CODE0"

.proc	_ShowYesNoButtons

	.dbg	line, "screen.c", 153
	ldy     #$02
	jsr     ldaxysp
	sta     L0140+1
	stx     L0140+1+1
	.dbg	line, "screen.c", 154
	ldy     #$00
	lda     (sp),y
	sta     L0140+4
	.dbg	line, "screen.c", 155
	ldx     #$00
	lda     (sp),y
	jsr     incax2
	sta     L0140+6
	.dbg	line, "screen.c", 156
	lda     #<(L0140)
	ldx     #>(L0140)
	jsr     pushax
	jsr     _MENU_Show
	cmp     #$00
	bne     L0153
	tax
	lda     #$01
	jmp     incsp3
L0153:	ldx     #$00
	txa
	jmp     incsp3
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void SCR_LineCenterBuf (unsigned char*, unsigned char*, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE0"

.proc	_SCR_LineCenterBuf

	.dbg	line, "screen.c", 268
	ldy     #$02
	jsr     ldaxysp
	jsr     _strlen
	jsr     pushax
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     tosicmp
	bcc     L01DF
	beq     L01DF
	ldx     #$00
	txa
	jmp     L01E1
L01DF:	ldy     #$00
	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldy     #$04
	jsr     ldaxysp
	jsr     _strlen
	jsr     tossubax
	jsr     shrax1
L01E1:	ldy     #$03
	jsr     addeqysp
	.dbg	line, "screen.c", 269
L01E6:	ldy     #$02
	jsr     ldaxysp
	ldy     #$00
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jeq     incsp5
	lda     (sp),y
	pha
	sec
	sbc     #$01
	sta     (sp),y
	pla
	tax
	jeq     incsp5
	.dbg	line, "screen.c", 271
	ldy     #$04
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$03
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jsr     pushax
	ldy     #$04
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$03
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	ldy     #$00
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	.dbg	line, "screen.c", 272
	jmp     L01E6
	.dbg	line

.endproc

